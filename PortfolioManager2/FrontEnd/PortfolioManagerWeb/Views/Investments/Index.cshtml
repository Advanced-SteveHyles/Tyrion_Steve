@model PortfolioManagerWeb.Models.InvestmentsViewModel
@using PagedList.Mvc;

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "View";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<p>
    @Html.ActionLink("Create New", "Create")
</p>

<h2>Index</h2>

<table class="table">
    <tr>
        <th>
            Symbol
        </th>
        <th>
            Name
        </th>
        <th>
            Type
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model.Investments)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Symbol)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.InvestmentId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Type)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Class)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.IncomeType)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.MarketIndex)
            </td>

            @*<td>
                    @((Model.ExpenseGroupStatusses as List<ExpenseTracker.DTO.ExpenseGroupStatus>)
                            .First(egs => egs.PortfolioAcountId == item.ExpenseGroupStatusPortfolioAcountId).Description)
                </td>*@

            <td>
                @*@Html.ActionLink("Edit", "Edit", new { id = item.PortfolioAcountId }) |*@
                @*@Html.ActionLink("Details", "Details", new { id = item.PortfolioAcountId }) |*@
                @*@Html.ActionLink("Delete", "Delete", new { id = item.PortfolioAcountId })*@
                @Html.ActionLink("Price", "EditPrice", "PriceUpdate", new {investmentId = item.InvestmentId} , null)
            </td>
        </tr>
    }

</table>



Page @(Model.PagingInfo.CurrentPage) of @Model.PagingInfo.TotalPages

@Html.PagedListPager(Model.Investments, page => Url.Action("Index",
    new { page }))
