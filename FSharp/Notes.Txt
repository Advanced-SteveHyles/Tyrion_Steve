Open is equivalent of using

The result of the last statement is the "return" value

unit is returned from all functions and its value is always () and is akin to void in C#

Syntax for inner pattern matching
 | n when n < 0 -> -120

 #F functions only ever have a single argument, when multiple are supplied these are curried back to1.

 Operators
 =========


 Deferred Operation (Currying), Partially Application of functions
 =================================================================
 let addTwoNumbers x y = x + y  (Adds to number together)

 let add5ToNumber = addTwoNumbers 5 (Returns a function that Adds Two Numbers Together, but has 5 as the first argument)

 > let z = add5ToNumber 6;;

 Effectively this is 
 let add5ToNumber y = addTwoNumbers 5 y

 Example 2:
 > let holdOn = addTwoNumbers 7;;
	val holdOn : (int -> int)   
 > let okDone = holdOn 8;;   
	val okDone : int = 15


Pattern Matching
================
Use _ to map the default case e.g. _ -> "do nothing"
| to delimit values with the same result
let something = function (*alternative syntax *)

Function always has a single argument, even if it is not shown e.g.
let getPrice = function
    | "banana" -> 0.79  (This parameter is not defined, but is implied)

> getPrice "banana";; val it : float = 0.79

-> failwith (* Throw and exception if this case is met *)


nan -- not a number.